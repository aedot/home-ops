---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app grafana
spec:
  chart:
    spec:
      chart: grafana
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      version: 8.5.11
  interval: 1h0m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-init:16
        envFrom:
          - secretRef:
              name: &secret grafana-secret
    replicas: 1
    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_LOG_MODE: console
      GF_NEWS_NEWS_FEED_ENABLED: false
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true # Ref: https://grafana.com/docs/grafana/latest/developers/angular_deprecation
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: https://grafana.${SECRET_DOMAIN}
    envFromSecrets:
      - name: *secret
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
    admin:
      existingSecret: *secret
      userKey: adminuser
      passwordKey: adminPassword

    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - { name: Alertmanager, orgId: 1 }
          - { name: Prometheus, orgId: 1 }
        datasources:
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            access: proxy
            url: http://alertmanager.observability.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
          - name: Prometheus
            type: prometheus
            url: http://prometheus-operated.observability.svc.cluster.local:9090
            isDefault: true
            jsonData:
              prometheusType: Prometheus

    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: network
            orgID: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/network
          - name: kubernetes
            orgID: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes
          - name: flux
            orgID: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux

    dashboards:
      default:
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus
      network:
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
      kubernetes:
        api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 18
          datasource: Prometheus
        coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 18
          datasource: Prometheus
        global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 42
          datasource: Prometheus
        namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 39
          datasource: Prometheus
        nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 32
          datasource: Prometheus
        pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 32
          datasource: Prometheus
        volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
        label: grafana_datasource
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: internal
      annotations:
        hajimari.io/appName: Grafana
        hajimari.io/icon: simple-icons:grafana
      hosts:
        - &host "grafana.${SECRET_DOMAIN}"
      paths:
        - /
      tls:
        - hosts:
            - *host
    persistence:
      enabled: false
    testFramework:
      enabled: false
